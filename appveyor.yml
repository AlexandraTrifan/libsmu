os: unstable

environment:
  matrix:
    - TOOLCHAIN: mingw
    - TOOLCHAIN: vs

platform:
  - x86
  - x64

matrix:
  fast_finish: true

install:
  - ps: >-
      If ($env:TOOLCHAIN -Match "mingw") {
        $env:GENERATOR="MinGW Makefiles"
        If ($env:Platform -Match "x86") {
            $env:MINGW_ARCHIVE="i686-5.3.0-release-posix-dwarf-rt_v4-rev0.7z"
            $env:MINGW_DIR="mingw32"
            $env:LIBUSB_ARCHIVE="libusb-1.0-win-hp-i686.7z"
        } Else {
            $env:MINGW_ARCHIVE="x86_64-5.3.0-release-posix-seh-rt_v4-rev0.7z"
            $env:MINGW_DIR="mingw64"
            $env:LIBUSB_ARCHIVE="libusb-1.0-win-hp-x86_64.7z"
        }
        appveyor DownloadFile "http://downloads.sourceforge.net/mingw-w64/$env:MINGW_ARCHIVE" -FileName "C:\mingw.7z"
        7z x -y "C:\mingw.7z" -o"C:\" > $null
        # workaround for CMake not wanting sh.exe on PATH for MinGW
        set PATH="%PATH:C:\Program Files (x86)\Git\bin;=%"
      } Else {
        If ($env:Platform -Match "x86") {
          $env:GENERATOR="Visual Studio 14 2015"
        } Else {
          $env:GENERATOR="Visual Studio 14 2015 Win64"
        }
      }

  - appveyor DownloadFile "http://swdownloads.analog.com/cse/m1k/$env:LIBUSB_ARCHIVE" -FileName "C:\libusb.7z"
  - 7z x -y "C:\libusb.7z" -o"C:\libusb" > nul

  # wheel needs to be installed in order to build binary wheels for pysmu
  - C:\\Python27\python.exe -m pip install wheel"

  # install innosetup for creating installers
  - choco install InnoSetup
  - set PATH=%PATH%;"C:\Program Files (x86)\Inno Setup 5"

build_script:
  - cmake -G "$env:GENERATOR" -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_SYSTEM_PREFIX_PATH="C:" .
  - cmake --build . --config Release

  # build python wheel
  - cd bindings/python
  - C:\\Python27\python.exe setup.py bdist_wheel
  - appveyor PushArtifact dist/*


cache:
  - C:\mingw.7z -> appveyor.yml
