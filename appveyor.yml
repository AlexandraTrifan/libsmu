os: unstable

platform:
  - x86
  - x64

matrix:
  fast_finish: true

install:
  - ps: >-
      If ($env:Platform -Match "x86") {
        $env:MINGW_ARCHIVE="i686-5.3.0-release-posix-dwarf-rt_v4-rev0.7z"
        $env:MINGW_DIR="mingw32"
        $env:LIBUSB_ARCHIVE="libusb-1.0-win-hp-i686.7z"
      } Else {
        $env:MINGW_ARCHIVE="x86_64-5.3.0-release-posix-seh-rt_v4-rev0.7z"
        $env:MINGW_DIR="mingw64"
        $env:LIBUSB_ARCHIVE="libusb-1.0-win-hp-x86_64.7z"
      }
  - ps: (new-object System.Net.WebClient).Downloadfile("http://downloads.sourceforge.net/mingw-w64/$env:MINGW_ARCHIVE", "c:\mingw.7z")
  - 7z x -y "c:\mingw.7z" -o"C:\" > nul
  - ps: (new-object System.Net.WebClient).Downloadfile("http://swdownloads.analog.com/cse/m1k/$env:LIBUSB_ARCHIVE", "c:\libusb.7z")
  - 7z x -y "c:\libusb.7z" -o"C:\libusb" > nul

  # wheel needs to be installed in order to build binary wheels for pysmu
  - C:\\Python27\python.exe -m pip install wheel"

  # install innosetup for creating installers
  - choco install InnoSetup
  - set PATH=%PATH%;"C:\Program Files (x86)\Inno Setup 5"

build_script:
  - cmake -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_SYSTEM_PREFIX_PATH="C:" .
  - cmake --build . --config Release

  # build python wheel
  - C:\\Python27\python.exe python/setup.py bdist_wheel
  - appveyor PushArtifact dist/*

  - dlltool --export-all-symbols -l libsmu.lib -z libsmu.def libsmu.dll
  - appveyor PushArtifact smu.exe
  - appveyor PushArtifact libsmu.dll
  - appveyor PushArtifact libpysmu.pyd
  - appveyor PushArtifact libsmu.lib
  - appveyor PushArtifact libsmu.def

cache:
  - C:\mingw.7z -> appveyor.yml
