matrix:
  fast_finish: true
  include:
    - os: linux
      sudo: required
      dist: trusty
      language: python
      python: 2.7
      env: PYTHON=python
    - os: linux
      sudo: required
      dist: trusty
      language: python
      python: 3.4
      env: PYTHON=python
    - os: linux
      sudo: required
      dist: trusty
      language: python
      python: 3.5
      env: PYTHON=python
    - os: osx
      osx_image: xcode61
      env: PYTHON=python
    - os: osx
      osx_image: xcode61
      env: PYTHON=python3

cache: pip

addons:
  apt:
    packages:
      - libusb-1.0
      - libboost-all-dev

before_install:
  - if [[ ${TRAVIS_OS_NAME} == osx ]]; then brew update; fi

install:
  - if [[ ${TRAVIS_OS_NAME} == osx ]]; then brew install libusb --universal; fi
  - if [[ ${TRAVIS_OS_NAME} == osx ]]; then brew install python || true; fi
  - if [[ ${TRAVIS_OS_NAME} == osx ]]; then brew install python python3 || true; fi

  # for python bindings
  - pip install --disable-pip-version-check --upgrade pip
  - pip install wheel cython

script:
  - mkdir build
  - pushd build
  - cmake -DBUILD_PYTHON=OFF ..
  - make

  # create generic binary shell-based installer/tarball
  - make package

  # build OS X installer
  - if [[ ${TRAVIS_OS_NAME} == osx ]]; then chmod +x build-osx-pkg.sh; fi
  - if [[ ${TRAVIS_OS_NAME} == osx ]]; then ./build-osx-pkg.sh; fi

  - popd

  # build pkthon bindings
  - pushd bindings/python
  # check python version
  - ${PYTHON} --version
  - ${PYTHON} -c "import struct; print(struct.calcsize('P') * 8)"
  # build extension linking to previously built library
  - ${PYTHON} setup.py build_ext -L ../../build/src
  - ${PYTHON} setup.py build
  - ${PYTHON} setup.py bdist_wheel --skip-build
